servers = (
  {
    address = "127.0.0.1";
    chatnet = "Campfire";
    port = "6667";
    autoconnect = "true";
    password = "<%= @campfire_subdomain %>:<%= @campfire_token %>";
  }
);
 
chatnets = {
  Campfire = { type = "IRC"; };
};
 
channels = (
<% @campfire_auto_rooms.each do |room| -%>
  { name = "#<%= room %>"; chatnet = "Campfire"; autojoin = "yes"; }
<% end -%>
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level yes;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
};

statusbar = {
	items = {
		barstart="{sbstart}";
		barend="{sbend}";

		#topicbarstart="{topicsbstart}";
		#topicbarend="{topicsbend}";

		time="{sb $Z}";
		user="{sb $cumode$N{sbmode $usermode}{sbaway $A}}";

		# treated specially .. window is printed with non-empty windows,
	    # window_empty is printed with empty windows
	    window = "{sb $winref:$itemname{sbmode $M}}";
	    window_empty = "{sb $winref{sbservertag $tag}}";
	    #prompt = "{prompt $[.15]itemname}";
	    #prompt_empty = "{prompt $winname}";
	    #topic = " $topic";
	    topic_empty = " ☃";

	    # all of these treated specially, they're only displayed when needed
	    lag = "{sb Lag: $0-}";
	    act = "{sb Act: $0-}";
	    more = "-- more --";
	};

	default = {
		#topic = {
		#	items = {
		#	};
		#};
		window = {
			disabled="no";
			type="window";
			placement="bottom";
			position="1";
			visible="active";

			items = {
				barstart={ priority="100"; }
				time={};
				user={};
				window={};
				window_empty={};
				lag={ priority="-1"; }
				act={ priority="10"; }
				more={ priority="-1"; alignment="right"; }
				barend={ priority="100"; alignment="right"; }
			};
		};
	};
<%#
	window_inact = {
	

		items = {

		};
	};

	prompt = {


		items = {

		};
	};

	topic = {


		items = {

		};
	};
%>
};

<%#
statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "";
    barend = "";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "yes";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "inactive";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
      disabled = "yes";
    };
    new1 = { placement = "top"; items = { }; position = "100"; };
    new2 = { placement = "bottom"; };
    awl_0 = {
      placement = "top";
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
%>

settings = {
  core = {
    real_name = "<%= @real_name %>";
    user_name = "<%= @uname %>";
    nick = "<%= @nick %>";
    #timestamp_format = "%H:%M";
    #recode="yes";
    #recode_autodetect_utf8="yes";
    #recode_out_default_charset= "= UTF-8";
    #recode_transliterate="no";
    #log_timestamp = "%H:%M:%S";
  };
  #"fe-text" = {
  #  actlist_sort = "refnum";
  #  indent_always = "yes";
  #  indent = "11";
  #  paste_verify_line_count = "45";
  #};
  #"fe-common/core" = {
  #  theme = "default";
  #  use_status_window = "no";
  #  show_names_on_join = "no";
  #  autocreate_own_query = "no";
  #  autocreate_windows = "yes";
  #  autolog = "on";
  #  autolog_path = "~/.irssi/logs/$tag/$0/%y-%m-%d.log";
  #  use_msgs_window = "yes";
  #  autolog_ignore_targets = "auth global hopm-siglost hostserv nickserv phallus [leet] chanserv uguubot";
  #};
  #"perl/core/scripts" = {
  #  awl_display_key = "$H %K$C $S";
  #  awl_display_key_active = "$H %n$C $S";
  #  awl_placement = "top";
  #  awl_separator = "\\ \\ \\ ";
  #};
};
hilights = (
  { text = "<%= @uname %>"; color = "%r»"; nick = "yes"; word = "yes"; },
  { text = "http(s)?://[A-Za-z0-9_/&?=%.;~#)(+-]*"; color="%G"; act_color="%n"; nick="no"; word="yes"; regexp="yes"; },
  { text = "(@)?[Dd]an"; nick="no"; word="yes"; },
);

windows = {
  1 = { immortal = "yes"; name = ""; level = "ALL"; };
<% @campfire_auto_rooms.each_with_index do |room, win| -%>
  <%= win+2 %> = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#<%= room %>";
        tag = "Campfire";
      }
    );
  };
<% end -%>
};

mainwindows = { 1 = { first_line = "0"; lines = "61"; }; };
logs = { };
#ignores = (
#  { mask = "MODES"; level = "ALL"; },
#  { level = "JOINS PARTS QUITS KICKS MODES NICKS"; }
#);
